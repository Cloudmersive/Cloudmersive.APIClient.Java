/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cloudmersive.client;

import java.io.File;
import com.cloudmersive.client.model.PdfToLinesWithLocationResult;
import com.cloudmersive.client.model.PdfToTextResponse;
import com.cloudmersive.client.model.PdfToWordsWithLocationResult;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PdfOcrApi
 */
@Ignore
public class PdfOcrApiTest {

    private final PdfOcrApi api = new PdfOcrApi();

    
    /**
     * Convert a PDF into text lines with location
     *
     * Converts a PDF into lines/text with location information and other metdata via Optical Character Recognition.  This API is intended to be run on scanned documents.  If you want to OCR photos (e.g. taken with a smart phone camera), be sure to use the photo/toText API instead, as it is designed to unskew the image first.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pdfOcrPdfToLinesWithLocationTest() throws Exception {
        File imageFile = null;
        String language = null;
        String preprocessing = null;
        PdfToLinesWithLocationResult response = api.pdfOcrPdfToLinesWithLocation(imageFile, language, preprocessing);

        // TODO: test validations
    }
    
    /**
     * Convert a PDF into words with location
     *
     * Converts a PDF into words/text with location information and other metdata via Optical Character Recognition.  This API is intended to be run on scanned documents.  If you want to OCR photos (e.g. taken with a smart phone camera), be sure to use the photo/toText API instead, as it is designed to unskew the image first.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pdfOcrPdfToWordsWithLocationTest() throws Exception {
        File imageFile = null;
        String language = null;
        String preprocessing = null;
        PdfToWordsWithLocationResult response = api.pdfOcrPdfToWordsWithLocation(imageFile, language, preprocessing);

        // TODO: test validations
    }
    
    /**
     * Converts an uploaded PDF file into text via Optical Character Recognition.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pdfOcrPostTest() throws Exception {
        File imageFile = null;
        String recognitionMode = null;
        String language = null;
        String preprocessing = null;
        PdfToTextResponse response = api.pdfOcrPost(imageFile, recognitionMode, language, preprocessing);

        // TODO: test validations
    }
    
}
