/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cloudmersive.client;

import java.io.File;
import com.cloudmersive.client.model.HtmlGetLanguageResult;
import com.cloudmersive.client.model.HtmlGetLinksResponse;
import com.cloudmersive.client.model.HtmlGetRelCanonicalUrlResult;
import com.cloudmersive.client.model.HtmlGetSitemapUrlResult;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EditHtmlApi
 */
@Ignore
public class EditHtmlApiTest {

    private final EditHtmlApi api = new EditHtmlApi();

    
    /**
     * Append an HTML tag to the HEAD section of an HTML Document
     *
     * Appends an HTML tag to the HEAD section of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlAppendHeaderTagTest() throws Exception {
        String htmlTag = null;
        File inputFile = null;
        String inputFileUrl = null;
        byte[] response = api.editHtmlHtmlAppendHeaderTag(htmlTag, inputFile, inputFileUrl);

        // TODO: test validations
    }
    
    /**
     * Append a Heading to an HTML Document
     *
     * Appends a heading to the end of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlAppendHeadingTest() throws Exception {
        String headingText = null;
        File inputFile = null;
        String inputFileUrl = null;
        Integer headingSize = null;
        String cssStyle = null;
        byte[] response = api.editHtmlHtmlAppendHeading(headingText, inputFile, inputFileUrl, headingSize, cssStyle);

        // TODO: test validations
    }
    
    /**
     * Append an Image to an HTML Document from a URL
     *
     * Appends an image to the end of an HTML document using a URL.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlAppendImageFromUrlTest() throws Exception {
        String imageUrl = null;
        File inputFile = null;
        String inputFileUrl = null;
        String cssStyle = null;
        byte[] response = api.editHtmlHtmlAppendImageFromUrl(imageUrl, inputFile, inputFileUrl, cssStyle);

        // TODO: test validations
    }
    
    /**
     * Append a Base64 Inline Image to an HTML Document
     *
     * Appends a base64 inline image to the end of an HTML document from an input file or URL.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlAppendImageInlineTest() throws Exception {
        File inputFile = null;
        String inputFileUrl = null;
        File imageFile = null;
        String imageUrl = null;
        String cssStyle = null;
        String imageExtension = null;
        byte[] response = api.editHtmlHtmlAppendImageInline(inputFile, inputFileUrl, imageFile, imageUrl, cssStyle, imageExtension);

        // TODO: test validations
    }
    
    /**
     * Append a Paragraph to an HTML Document
     *
     * Appends a paragraph to the end of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlAppendParagraphTest() throws Exception {
        String paragraphText = null;
        File inputFile = null;
        String inputFileUrl = null;
        String cssStyle = null;
        byte[] response = api.editHtmlHtmlAppendParagraph(paragraphText, inputFile, inputFileUrl, cssStyle);

        // TODO: test validations
    }
    
    /**
     * Create a Blank HTML Document
     *
     * Returns a blank HTML Document format file.  The file is blank, with no contents by default.  Use the optional input parameters to add various starting elements.  Use additional editing commands such as Append Header, Append Paragraph or Append Image from URL to populate the document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlCreateBlankDocumentTest() throws Exception {
        String title = null;
        String cssUrl = null;
        String cssInline = null;
        String javascriptUrl = null;
        String javascriptInline = null;
        byte[] response = api.editHtmlHtmlCreateBlankDocument(title, cssUrl, cssInline, javascriptUrl, javascriptInline);

        // TODO: test validations
    }
    
    /**
     * Gets the language for the HTML document
     *
     * Retrieves the language code (e.g. \&quot;en\&quot; or \&quot;de\&quot;) of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlGetLanguageTest() throws Exception {
        File inputFile = null;
        String inputFileUrl = null;
        HtmlGetLanguageResult response = api.editHtmlHtmlGetLanguage(inputFile, inputFileUrl);

        // TODO: test validations
    }
    
    /**
     * Extract resolved link URLs from HTML File
     *
     * Extracts the resolved link URLs, fully-qualified if possible, from an input HTML file.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlGetLinksTest() throws Exception {
        File inputFile = null;
        String inputFileUrl = null;
        String baseUrl = null;
        HtmlGetLinksResponse response = api.editHtmlHtmlGetLinks(inputFile, inputFileUrl, baseUrl);

        // TODO: test validations
    }
    
    /**
     * Gets the rel canonical URL for the HTML document
     *
     * Gets the rel canonical URL of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlGetRelCanonicalTest() throws Exception {
        File inputFile = null;
        String inputFileUrl = null;
        HtmlGetRelCanonicalUrlResult response = api.editHtmlHtmlGetRelCanonical(inputFile, inputFileUrl);

        // TODO: test validations
    }
    
    /**
     * Gets the sitemap URL for the HTML document
     *
     * Gets the sitemap link URL of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlGetSitemapTest() throws Exception {
        File inputFile = null;
        String inputFileUrl = null;
        HtmlGetSitemapUrlResult response = api.editHtmlHtmlGetSitemap(inputFile, inputFileUrl);

        // TODO: test validations
    }
    
    /**
     * Sets the language for the HTML document
     *
     * Sets the language code of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlSetLanguageTest() throws Exception {
        String languageCode = null;
        File inputFile = null;
        String inputFileUrl = null;
        byte[] response = api.editHtmlHtmlSetLanguage(languageCode, inputFile, inputFileUrl);

        // TODO: test validations
    }
    
    /**
     * Sets the rel canonical URL for the HTML document
     *
     * Sets the rel canonical URL of an HTML document.  This is useful for telling search engines and other indexers which pages are duplicates of eachother; any pages with the rel&#x3D;canonical tag will be treated as duplicates of the canonical URL.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlSetRelCanonicalTest() throws Exception {
        String canonicalUrl = null;
        File inputFile = null;
        String inputFileUrl = null;
        byte[] response = api.editHtmlHtmlSetRelCanonical(canonicalUrl, inputFile, inputFileUrl);

        // TODO: test validations
    }
    
    /**
     * Sets the sitemap URL for the HTML document
     *
     * Sets the sitemap URL of an HTML document.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editHtmlHtmlSetSitemapUrlTest() throws Exception {
        String sitemapUrl = null;
        File inputFile = null;
        String inputFileUrl = null;
        byte[] response = api.editHtmlHtmlSetSitemapUrl(sitemapUrl, inputFile, inputFileUrl);

        // TODO: test validations
    }
    
}
