/*
 * currencyapi
 * The currency APIs help you retrieve exchange rates and convert prices between currencies easily.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cloudmersive.client;

import com.cloudmersive.client.model.AvailableCurrencyResponse;
import com.cloudmersive.client.model.ConvertedCurrencyResult;
import com.cloudmersive.client.model.ExchangeRateResult;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CurrencyExchangeApi
 */
@Ignore
public class CurrencyExchangeApiTest {

    private final CurrencyExchangeApi api = new CurrencyExchangeApi();

    
    /**
     * Converts a price from the source currency into the destination currency
     *
     * Automatically converts the price in the source currency into the destination currency using the latest available currency exchange rate data.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void currencyExchangeConvertCurrencyTest() throws Exception {
        String source = null;
        String destination = null;
        Double sourcePrice = null;
        ConvertedCurrencyResult response = api.currencyExchangeConvertCurrency(source, destination, sourcePrice);

        // TODO: test validations
    }
    
    /**
     * Get a list of available currencies and corresponding countries
     *
     * Enumerates available currencies and the countries that correspond to these currencies.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void currencyExchangeGetAvailableCurrenciesTest() throws Exception {
        AvailableCurrencyResponse response = api.currencyExchangeGetAvailableCurrencies();

        // TODO: test validations
    }
    
    /**
     * Gets the exchange rate from the source currency into the destination currency
     *
     * Automatically gets the exchange rate from the source currency into the destination currency using the latest available currency exchange rate data.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void currencyExchangeGetExchangeRateTest() throws Exception {
        String source = null;
        String destination = null;
        ExchangeRateResult response = api.currencyExchangeGetExchangeRate(source, destination);

        // TODO: test validations
    }
    
}
